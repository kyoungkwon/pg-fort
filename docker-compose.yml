version: '3.4'

services:
  pg-fort:
    image: pg-fort
    build:
      dockerfile: Dockerfile
    ports:
      - 8890:8890
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
      postgres-migrate:
        condition: service_completed_successfully
    working_dir: /usr/local/pg-fort
    command: 8890 postgres 5432

  postgres-migrate:
    build:
      context: schema
      dockerfile: Dockerfile
      target: build
    volumes:
      - ./schema:/schema
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    command: sql-migrate up --config=schema/dbconfig.yml -env=development
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres
    volumes:
      - test-postgres-db:/var/lib/postgres/data
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"
        ]
      interval: 10s
      timeout: 10s
      retries: 50

volumes:
  test-postgres-db:
