version: '3.4'

services:
  postgresql-proxy:
    image: postgresql-proxy
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8890:8890
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      postgresql:
        condition: service_healthy
      postgresql-migrate:
        condition: service_completed_successfully
    working_dir: /usr/local/postgresql-proxy
    command: 8890 postgresql 5432

  postgresql-migrate:
    build:
      context: .
      dockerfile: Dockerfile
      target: build-deps
    volumes:
      - ./acl-schema:/acl-schema
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    command: sql-migrate up --config=acl-schema/dbconfig.yml -env=development
    depends_on:
      postgresql:
        condition: service_healthy

  postgresql:
    image: postgres
    volumes:
      - test-postgres-db:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"
        ]
      interval: 10s
      timeout: 10s
      retries: 50

volumes:
  test-postgres-db:
